interactions:
  - request:
      body: '{"input":["I like turtles."],"model":"text-embedding-3-small","dimensions":1536,"encoding_format":"base64"}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "107"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "120"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/embeddings
    response:
      body:
        string: !!binary |
          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
      headers:
        CF-RAY:
          - 96db6524590c67e2-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:28 GMT
        Server:
          - cloudflare
        Set-Cookie:
          - __cf_bm=_w.CUcYUie9PVM5vSAB.aI9.D47mYgbIYZRa_0ErXH8-1754953708-1.0.1.1-d8XTyew1hJsE8A0PCr.IJn1j6cnoM4LKaHtlAuRQ3Yq_wayp8r.8MCfBf5UGlTjKWVyrw1hQ5qQ43o..4Un0RZO9vANWz_ZFc9hAvY6Bqp4;
            path=/; expires=Mon, 11-Aug-25 23:38:28 GMT; domain=.api.openai.com; HttpOnly;
            Secure; SameSite=None
          - _cfuvid=k9RYXJvNezThXwC.yRkqrEMXpKqjyuhZHB5xZXQvzjU-1754953708442-0.0.1.1-604800000;
            path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-allow-origin:
          - "*"
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-model:
          - text-embedding-3-small
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "123"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        via:
          - envoy-router-c98c4dbb7-z25bw
        x-envoy-upstream-service-time:
          - "178"
        x-ratelimit-limit-requests:
          - "200000"
        x-ratelimit-limit-tokens:
          - "200000000"
        x-ratelimit-remaining-requests:
          - "199999"
        x-ratelimit-remaining-tokens:
          - "199999996"
        x-ratelimit-reset-requests:
          - 0s
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_5f1855c382ed40aab8cbb0a1c19c6f51
      status:
        code: 200
        message: OK
  - request:
      body: '{"input":["I like cats."],"model":"text-embedding-3-small","dimensions":1536,"encoding_format":"base64"}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "104"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "120"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/embeddings
    response:
      body:
        string: !!binary |
          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
          /7n8r+WP/uNf/wkAAP//AwAkUor53iAAAA==
      headers:
        CF-RAY:
          - 96db65266b4267e2-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:28 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-allow-origin:
          - "*"
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-model:
          - text-embedding-3-small
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "71"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        via:
          - envoy-router-d4df5c7b7-cgvt9
        x-envoy-upstream-service-time:
          - "89"
        x-ratelimit-limit-requests:
          - "200000"
        x-ratelimit-limit-tokens:
          - "200000000"
        x-ratelimit-remaining-requests:
          - "199999"
        x-ratelimit-remaining-tokens:
          - "199999996"
        x-ratelimit-reset-requests:
          - 0s
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_bd8d09ad2b6b45768a7b9718702b89b9
      status:
        code: 200
        message: OK
  - request:
      body: '{"input":["What do I like?"],"model":"text-embedding-3-small","dimensions":1536,"encoding_format":"base64"}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "107"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "120"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/embeddings
    response:
      body:
        string: !!binary |
          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
          /wMAj7RUa94gAAA=
      headers:
        CF-RAY:
          - 96db65274c1a67e2-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:28 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-allow-origin:
          - "*"
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-model:
          - text-embedding-3-small
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "207"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        via:
          - envoy-router-7d9c6b8bbd-bv7k7
        x-envoy-upstream-service-time:
          - "242"
        x-ratelimit-limit-requests:
          - "200000"
        x-ratelimit-limit-tokens:
          - "200000000"
        x-ratelimit-remaining-requests:
          - "199999"
        x-ratelimit-remaining-tokens:
          - "199999996"
        x-ratelimit-reset-requests:
          - 0s
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_847886c7ce5f4db9ab081058f2c90aef
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages":[{"role":"system","content":"Provide a summary of the relevant
        information that could help answer the question based on the excerpt. Your summary,
        combined with many others, will be given to the model to generate an answer.
        Respond with the following JSON format:\n\n{\n  \"summary\": \"...\",\n  \"relevance_score\":
        \"...\"\n  \"used_images\"\n}\n\nwhere `summary` is relevant information from
        the text - about 100 words words. `relevance_score` is an integer 1-10 for the
        relevance of `summary` to the question. `used_images` is a boolean flag indicating
        if any images present in a multimodal message were used, and if no images were
        present it should be false."},{"role":"user","content":"Excerpt from sentence1:
        stub\n\n------------\n\nI like turtles.\n\n------------\n\nQuestion: What do
        I like?\n\n"}],"model":"gpt-4o-2024-11-20","n":1,"temperature":0.0}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "873"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "60.0"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAAwAAAP//jJNPi9swEMXv/hSDzsliO//YHNvjQttDWQr1YrTy2FYjS0IzDgkh373I
          TuJk20IvPsxP73nmjXRKAISuxBaEaiWrzpv558Vrv/+Sy96/HtSKvv0IL5/W6136/PJVGTGLCvf+
          CxVfVU/Kdd4ga2dHrAJKxuiabVbL59Vikz4PoHMVmihrPM+Xbp6n+XKeZfM8vQhbpxWS2MLPBADg
          NHxji7bCg9hCOrtWOiSSDYrt7RCACM7EipBEmlhaFrMJKmcZ7dD1qbAAhaC+62Q4FmILhfjeIuBB
          YfAMePBGK83mCMSSkYBbycAtQk8YwOhdrPWBDdJTIWajX0CDe2kVlqRcwNE3S2+8J6xK3ckGKbJa
          GsLCnu+bDFj3JGNGtjfmDkhrHcuY8RDP24Wcb4EY1/jg3umDVNTaamrLgJKcjcMTOy8Gek4A3obg
          +4cshQ+u81yy2+Hwu2xzCV5Mq57oYnGB7FiaqZ6nV/DgV1bIUhu6W51QUrVYTdJpz7KvtLsDyd3U
          f3bzN+9xcm2b/7GfgFLoGavSB6y0epx4OhYwvoR/HbulPDQsCMNeKyxZY4ibqLCWvRkvqaAjMXZl
          rW2DwQc93tTal3m2xvVqqZaVSM7JbwAAAP//AwAd+80NsgMAAA==
      headers:
        CF-RAY:
          - 96db65298edd9447-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:29 GMT
        Server:
          - cloudflare
        Set-Cookie:
          - __cf_bm=yw9dBHN6NEhRm2L4JYv2KgA13sEf__PlvnUSVh9w5q4-1754953709-1.0.1.1-himr9C9caqduXPhNffS.1pZ.bIcQcBKDuiYIg5iY2gZJhaMB6mBI.RV7w8USZ2Uk2_uoHcE4D3vw6TN27QoW_0I.3VZWMTsBtadcACVe4kM;
            path=/; expires=Mon, 11-Aug-25 23:38:29 GMT; domain=.api.openai.com; HttpOnly;
            Secure; SameSite=None
          - _cfuvid=ml2o2WeT7AZjfLewgFjrffK_BhRMqkvnn2B60t_lnvY-1754953709662-0.0.1.1-604800000;
            path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
        Strict-Transport-Security:
          - max-age=31536000; includeSubDomains; preload
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "516"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        x-envoy-upstream-service-time:
          - "538"
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999817"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_b1a164c97fa64d6389d83ee41beda382
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages":[{"role":"system","content":"Provide a summary of the relevant
        information that could help answer the question based on the excerpt. Your summary,
        combined with many others, will be given to the model to generate an answer.
        Respond with the following JSON format:\n\n{\n  \"summary\": \"...\",\n  \"relevance_score\":
        \"...\"\n  \"used_images\"\n}\n\nwhere `summary` is relevant information from
        the text - about 100 words words. `relevance_score` is an integer 1-10 for the
        relevance of `summary` to the question. `used_images` is a boolean flag indicating
        if any images present in a multimodal message were used, and if no images were
        present it should be false."},{"role":"user","content":"Excerpt from sentence2:
        stub\n\n------------\n\nI like cats.\n\n------------\n\nQuestion: What do I
        like?\n\n"}],"model":"gpt-4o-2024-11-20","n":1,"temperature":0.0}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "870"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "60.0"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAAwAAAP//jJJPj9owEMXv+RQjn2GVBFgEtxb1sj1VaitVzSry2pPEXcd2PRMEQnz3
          KglLoH+kXnKY37yXmTc+JQDCaLEFoRrJqg12vlt87fbvGvvtyyd/fKIntUs//PzossP7zS6KWa/w
          Lz9Q8ZvqQfk2WGTj3YhVRMnYu2br1XKzWqzTzQBar9H2sjrwfOnneZov51k2z9OLsPFGIYktfE8A
          AE7Dtx/RaTyILaSzt0qLRLJGsb02AYjobV8RksgQS8diNkHlHaMbpj4VDqAQ1LWtjMdCbKEQnxsE
          PCiMgYFYMhJwIxm4QegII1jzigRKMj0UYjY6RLS4l05hScpHHJ2y9Mo7Ql2aVtZIPaukJSzc+Xas
          iFVHsk/FddbeAOmcZ9mnOgTyfCHnawTW1yH6F/pNKirjDDVlREne9esS+yAGek4Anoeou7v0RIi+
          DVyyf8Xhd9n6ErWYjjvRRX6B7FnaqZ6nb+DOr9TI0li6OZZQUjWoJ+l0Wdlp429AcrP1n9P8zXvc
          3Lj6f+wnoBQGRl2GiNqo+42ntoj92/9X2zXlYWBBGPdGYckGY38JjZXs7PgsBR2JsS0r42qMIZrx
          bVahzLNHfFwt1VKL5Jz8AgAA//8DANV7SjGkAwAA
      headers:
        CF-RAY:
          - 96db65298fdafaec-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:29 GMT
        Server:
          - cloudflare
        Set-Cookie:
          - __cf_bm=d4jzhBCkIULKSHmXzcCS57TQQOIVFPc5FzW7kbb1N.o-1754953709-1.0.1.1-ZIykQuWjgO_qK6vBSkWuD_JQ1qyN8UMUa85US2lW9Lj0fEzjr.q22PxCQt1m7RvQagdkminRZl.y1QtsTFOjXBguWJEhpqgoLPCfOq24e.4;
            path=/; expires=Mon, 11-Aug-25 23:38:29 GMT; domain=.api.openai.com; HttpOnly;
            Secure; SameSite=None
          - _cfuvid=yllY0TiDRDi6PE5u8pr.h4nVOb7lBN7qPU8k6O61NRE-1754953709956-0.0.1.1-604800000;
            path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
        Strict-Transport-Security:
          - max-age=31536000; includeSubDomains; preload
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "573"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        x-envoy-upstream-service-time:
          - "844"
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999818"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_77fd6ffb0a714951853d3c13425e8e49
      status:
        code: 200
        message: OK
  - request:
      body: '{"input":["What was it that I liked?"],"model":"text-embedding-3-small","dimensions":1536,"encoding_format":"base64"}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "117"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "120"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/embeddings
    response:
      body:
        string: !!binary |
          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
      headers:
        CF-RAY:
          - 96db652fbc7567e2-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:30 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-allow-origin:
          - "*"
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-model:
          - text-embedding-3-small
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "118"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        via:
          - envoy-router-5db985b4df-dwfwp
        x-envoy-upstream-service-time:
          - "150"
        x-ratelimit-limit-requests:
          - "200000"
        x-ratelimit-limit-tokens:
          - "200000000"
        x-ratelimit-remaining-requests:
          - "199999"
        x-ratelimit-remaining-tokens:
          - "199999993"
        x-ratelimit-reset-requests:
          - 0s
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_08bbdc48fa714671802357b8d5467269
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages":[{"role":"system","content":"Provide a summary of the relevant
        information that could help answer the question based on the excerpt. Your summary,
        combined with many others, will be given to the model to generate an answer.
        Respond with the following JSON format:\n\n{\n  \"summary\": \"...\",\n  \"relevance_score\":
        \"...\"\n  \"used_images\"\n}\n\nwhere `summary` is relevant information from
        the text - about 100 words words. `relevance_score` is an integer 1-10 for the
        relevance of `summary` to the question. `used_images` is a boolean flag indicating
        if any images present in a multimodal message were used, and if no images were
        present it should be false."},{"role":"user","content":"Excerpt from sentence1:
        stub\n\n------------\n\nI like turtles.\n\n------------\n\nQuestion: What was
        it that I liked?\n\n"}],"model":"gpt-4o-2024-11-20","n":1,"temperature":0.0}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "883"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "60.0"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAAwAAAP//jJJBb9swDIXv/hWEzkkRO06D5TrstmEYEGwD5sJQJNrWIkuaSHcpivz3
          QXYbp2sH7OIDP75n8lGPGYAwWuxAqE6y6oNdvl9/HX4fhqY5nX593Bf8+ct3h/sPx09Ybr+JRVL4
          w09U/Ky6Ub4PFtl4N2EVUTIm13y7Kd9t1tt8NYLea7RJ1gZeln5ZrIpymefLYvUk7LxRSGIHPzIA
          gMfxm0Z0Gk9iB6PNWOmRSLYodpcmABG9TRUhiQyxdCwWM1TeMbpx6sfKAVSChr6X8aESO6jEvkPA
          k8IYGIglIwF3koE7hIEwgjXHVBsiW6SbSiwmk4gW76VTWJPyESezfHXhA6GuTS9bpMQaaQkrd76e
          LGIzkEzBuMHaKyCd8yxTsGMmd0/kfEnB+jZEf6C/pKIxzlBXR5TkXdqY2Acx0nMGcDemPbwIUITo
          +8A1+yOOv8u3xeQn5vvOdP0M2bO0c71YlYs3/GqNLI2lq3sJJVWHepbOx5WDNv4KZFdbv57mLe9p
          c+Pa/7GfgVIYGHUdImqjXm48t0VMz/9fbZeUx4EFYbw3Cms2GNMlNDZysNPLFPRAjH3dGNdiDNFM
          z7MJdZHf4u2mVKUW2Tn7AwAA//8DAMVkVqOnAwAA
      headers:
        CF-RAY:
          - 96db653148039447-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:31 GMT
        Server:
          - cloudflare
        Strict-Transport-Security:
          - max-age=31536000; includeSubDomains; preload
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "668"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        x-envoy-upstream-service-time:
          - "757"
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999814"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_043ed284f77b4fa99536a4279fe48aeb
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages":[{"role":"system","content":"Provide a summary of the relevant
        information that could help answer the question based on the excerpt. Your summary,
        combined with many others, will be given to the model to generate an answer.
        Respond with the following JSON format:\n\n{\n  \"summary\": \"...\",\n  \"relevance_score\":
        \"...\"\n  \"used_images\"\n}\n\nwhere `summary` is relevant information from
        the text - about 100 words words. `relevance_score` is an integer 1-10 for the
        relevance of `summary` to the question. `used_images` is a boolean flag indicating
        if any images present in a multimodal message were used, and if no images were
        present it should be false."},{"role":"user","content":"Excerpt from sentence2:
        stub\n\n------------\n\nI like cats.\n\n------------\n\nQuestion: What was it
        that I liked?\n\n"}],"model":"gpt-4o-2024-11-20","n":1,"temperature":0.0}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "880"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "60.0"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAAwAAAP//jJJNb9swDIbv/hWEzklhO06D5TYU6GnYBxDssLkwVJm2tciSJtL9QJD/
          PshO43TrgF504EO+Il/ykAAIXYstCNVJVr03y5vV9+Hxy6du//WbvE1/fPx9+6g3fv95t1OrVCxi
          hbv/hYpfqq6U671B1s5OWAWUjFE126yLD+vVJktH0LsaTSxrPS8Lt8zTvFhm2TI/6arOaYUktvAz
          AQA4jG9s0db4JLYwyoyRHolki2J7TgIQwZkYEZJIE0vLYjFD5SyjHbs+lBagFDT0vQzPpdhCKXYd
          Aj4pDJ6BWDIScCcZuEMYCAMYvUcCJZmuSrGYFAIafJBWYUXKBYxKWXpiA2Fd6V62SDHeSENY2uNl
          SwGbgWR0xA7GXABprWMZHR3NuDuR43l841of3D39VSoabTV1VUBJzsZRiZ0XIz0mAHejzcMr54QP
          rvdcsdvj+F22ySc9MS92pqsXyI6lmeN5Wize0KtqZKkNXSxKKKk6rOfSeatyqLW7AMnF1P9285b2
          NLm27XvkZ6AUesa68gFrrV5PPKcFjHf/v7Szy2PDgjA8aIUVawxxEzU2cjDTSQp6Jsa+arRtMfig
          p7tsfJVn13i9LlRRi+SY/AEAAP//AwC1UvjuoAMAAA==
      headers:
        CF-RAY:
          - 96db653148acfaec-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:31 GMT
        Server:
          - cloudflare
        Strict-Transport-Security:
          - max-age=31536000; includeSubDomains; preload
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "1025"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        x-envoy-upstream-service-time:
          - "1055"
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999815"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_83409e6537d74107a438ce8a22688819
      status:
        code: 200
        message: OK
version: 1
