interactions:
  - request:
      body: '{"input":["I like turtles."],"model":"text-embedding-3-small","dimensions":1536,"encoding_format":"base64"}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "107"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "120"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/embeddings
    response:
      body:
        string: !!binary |
          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
          P/Sf//o/AAAA//8DAC0jkNneIAAA
      headers:
        CF-RAY:
          - 96db65121e2feb36-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:25 GMT
        Server:
          - cloudflare
        Set-Cookie:
          - __cf_bm=EAz8ez808b5HAxKuM4BO.ejbuZhFjerDKLttLzwBucw-1754953705-1.0.1.1-tCTezjL_TkMIopDaFrD09uro.URNa4_fFDPi9_Uq.6EdBEhPDmiY7g1d7ukMmgZYjBQiO1hBdaBbC457nE4T15J_Hxcna_CWYrXn5vMGhdc;
            path=/; expires=Mon, 11-Aug-25 23:38:25 GMT; domain=.api.openai.com; HttpOnly;
            Secure; SameSite=None
          - _cfuvid=iyBg5GQtOuTkd2P0.B69SVvKgT4YFXOhrqu2mW47fm0-1754953705535-0.0.1.1-604800000;
            path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-allow-origin:
          - "*"
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-model:
          - text-embedding-3-small
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "117"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        via:
          - envoy-router-f8dc4c597-sll9x
        x-envoy-upstream-service-time:
          - "213"
        x-ratelimit-limit-requests:
          - "200000"
        x-ratelimit-limit-tokens:
          - "200000000"
        x-ratelimit-remaining-requests:
          - "199999"
        x-ratelimit-remaining-tokens:
          - "199999996"
        x-ratelimit-reset-requests:
          - 0s
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_27051155f76a4a18b0e3129a05245bdd
      status:
        code: 200
        message: OK
  - request:
      body: '{"input":["I like cats."],"model":"text-embedding-3-small","dimensions":1536,"encoding_format":"base64"}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "104"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "120"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/embeddings
    response:
      body:
        string: !!binary |
          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
          /7n8r+WP/uNf/wkAAP//AwAkUor53iAAAA==
      headers:
        CF-RAY:
          - 96db65143d4deb36-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:25 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-allow-origin:
          - "*"
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-model:
          - text-embedding-3-small
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "105"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        via:
          - envoy-router-5df48d76cd-jwrs5
        x-envoy-upstream-service-time:
          - "165"
        x-ratelimit-limit-requests:
          - "200000"
        x-ratelimit-limit-tokens:
          - "200000000"
        x-ratelimit-remaining-requests:
          - "199999"
        x-ratelimit-remaining-tokens:
          - "199999996"
        x-ratelimit-reset-requests:
          - 0s
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_987d3a42ccc5461fa007c7d274315659
      status:
        code: 200
        message: OK
  - request:
      body: '{"input":["What do I like?"],"model":"text-embedding-3-small","dimensions":1536,"encoding_format":"base64"}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "107"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "120"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/embeddings
    response:
      body:
        string: !!binary |
          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
      headers:
        CF-RAY:
          - 96db651589a7eb36-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:26 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-allow-origin:
          - "*"
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-model:
          - text-embedding-3-small
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "132"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        via:
          - envoy-router-5db985b4df-jlbp2
        x-envoy-upstream-service-time:
          - "181"
        x-ratelimit-limit-requests:
          - "200000"
        x-ratelimit-limit-tokens:
          - "200000000"
        x-ratelimit-remaining-requests:
          - "199999"
        x-ratelimit-remaining-tokens:
          - "199999996"
        x-ratelimit-reset-requests:
          - 0s
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_f4e76e43d81245e188271bf07ec22568
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages":[{"role":"system","content":"Provide a summary of the relevant
        information that could help answer the question based on the excerpt. Your summary,
        combined with many others, will be given to the model to generate an answer.
        Respond with the following JSON format:\n\n{\n  \"summary\": \"...\",\n  \"relevance_score\":
        \"...\"\n  \"used_images\"\n}\n\nwhere `summary` is relevant information from
        the text - about 100 words words. `relevance_score` is an integer 1-10 for the
        relevance of `summary` to the question. `used_images` is a boolean flag indicating
        if any images present in a multimodal message were used, and if no images were
        present it should be false."},{"role":"user","content":"Excerpt from sentence1:
        stub\n\n------------\n\nI like turtles.\n\n------------\n\nQuestion: What do
        I like?\n\n"}],"model":"gpt-4o-2024-11-20","n":1,"temperature":0.0}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "873"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "60.0"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAAwAAAP//jJNNi9swEIbv/hVC52Sx87XdXHtoDy0UupRl68Uo0thWI0tCM0oTQv57
          kZ3EST+gFx/m0ft65h3pmDHGteJrxmUrSHbeTN/Pv0V89/Ky+/D889Pn19ePhWq/ovuy22z3kU+S
          wm1+gKSL6kG6zhsg7eyAZQBBkFyLx+XiaTl/zFc96JwCk2SNp+nCTWf5bDEtiuksPwtbpyUgX7Pv
          GWOMHftvatEq2PM1yyeXSgeIogG+vh5ijAdnUoULRI0kLPHJCKWzBLbv+lhaxkqOsetEOJR8zUr+
          3AKDvYTgicHeGy01mQNDEgTIqBXEqAUWEQIzeptqMZABfCj5ZPALYGAnrIQKpQsw+Bb5lUcEVelO
          NICJ1cIglPZ022SAOqJIGdlozA0Q1joSKeM+nrczOV0DMa7xwW3wNymvtdXYVgEEOpuGR3Ke9/SU
          MfbWBx/vsuQ+uM5TRW4L/e+Kx3PwfFz1SOfzMyRHwoz1WX4Bd36VAhLa4M3quBSyBTVKxz2LqLS7
          AdnN1H928zfvYXJtm/+xH4GU4AlU5QMoLe8nHo8FSC/hX8euKfcNc4Sw0xIq0hDSJhTUIprhknI8
          IEFX1do2EHzQw02tfTUrVrBaLuRC8eyU/QIAAP//AwCvhSxHsgMAAA==
      headers:
        CF-RAY:
          - 96db65174cfe67f8-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:26 GMT
        Server:
          - cloudflare
        Set-Cookie:
          - __cf_bm=HANEq4ZnGEKJEmtFfKVgha0kkUQF_R6_Rbn.uZV.9lA-1754953706-1.0.1.1-HvhIC_FxcKJkK4XVR5kDDgO7pGOCKFvAPBDgNTI0DFPb8NS37czCYFC7lDY6h72SfZ4ChBnLD7YwtjD89hwGGVAgAfEqsVVIBVQluTpfA5M;
            path=/; expires=Mon, 11-Aug-25 23:38:26 GMT; domain=.api.openai.com; HttpOnly;
            Secure; SameSite=None
          - _cfuvid=X1evwgSoJ3hW_frRGyoTRq7VtD6nUt8DXKG1vc63cZI-1754953706776-0.0.1.1-604800000;
            path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
        Strict-Transport-Security:
          - max-age=31536000; includeSubDomains; preload
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "576"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        x-envoy-upstream-service-time:
          - "593"
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999817"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_6b740aabf75f4ffe8409c7c1736fd15a
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages":[{"role":"system","content":"Provide a summary of the relevant
        information that could help answer the question based on the excerpt. Your summary,
        combined with many others, will be given to the model to generate an answer.
        Respond with the following JSON format:\n\n{\n  \"summary\": \"...\",\n  \"relevance_score\":
        \"...\"\n  \"used_images\"\n}\n\nwhere `summary` is relevant information from
        the text - about 100 words words. `relevance_score` is an integer 1-10 for the
        relevance of `summary` to the question. `used_images` is a boolean flag indicating
        if any images present in a multimodal message were used, and if no images were
        present it should be false."},{"role":"user","content":"Excerpt from sentence2:
        stub\n\n------------\n\nI like cats.\n\n------------\n\nQuestion: What do I
        like?\n\n"}],"model":"gpt-4o-2024-11-20","n":1,"temperature":0.0}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "870"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "60.0"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAAwAAAP//jJI9j9swDIZ3/wpCc3Kwna82W3tLly5F0aU+GIpE2+rJkiLS1zsE+e+F
          7SR2+gF08cCH72vypU4JgDBa7EGoRrJqg10+rr51hCt//HRQPy1++LI5vmsz+fhx034+ikWv8Icf
          qPiqelC+DRbZeDdiFVEy9q7ZbrN+v1nt0u0AWq/R9rI68HLtl3mar5dZtszTi7DxRiGJPXxPAABO
          w7cf0Wl8FXtIF9dKi0SyRrG/NQGI6G1fEZLIEEvHYjFB5R2jG6Y+FQ6gENS1rYxvhdhDIb42CPiq
          MAYGYslIwI1k4AahI4xgzTMSKMn0UIjF6BDR4ot0CktSPuLolKU33hHq0rSyRupZJS1h4c7zsSJW
          Hck+FddZOwPSOc+yT3UI5OlCzrcIrK9D9Af6TSoq4ww1ZURJ3vXrEvsgBnpOAJ6GqLu79ESIvg1c
          sn/G4XfZ7hK1mI470VV+gexZ2qmep1dw51dqZGkszY4llFQN6kk6XVZ22vgZSGZb/znN37zHzY2r
          /8d+AkphYNRliKiNut94aovYv/1/td1SHgYWhPHFKCzZYOwvobGSnR2fpaA3YmzLyrgaY4hmfJtV
          KPNsi9vNWq21SM7JLwAAAP//AwD6nMkppAMAAA==
      headers:
        CF-RAY:
          - 96db65174a04ed3f-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:26 GMT
        Server:
          - cloudflare
        Set-Cookie:
          - __cf_bm=G2YwPkSqxUoBeW7DYk8kiGcs5aYKydU4t2Aq8TirWW4-1754953706-1.0.1.1-vtgPxLkvvW8YA7Ug6kbif0QsiVTLTnEoemK1urJLYTrpkgmOM72dviefR9AdDCpBgA6_QVnWkvZGFIyLm3VSkBfSr3cTj1OBKpPgNj3S.b8;
            path=/; expires=Mon, 11-Aug-25 23:38:26 GMT; domain=.api.openai.com; HttpOnly;
            Secure; SameSite=None
          - _cfuvid=LnVU9di8qogmPVTKrizd1EulQeiogpgoBQaM2b9TPPw-1754953706803-0.0.1.1-604800000;
            path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
        Strict-Transport-Security:
          - max-age=31536000; includeSubDomains; preload
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "603"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        x-envoy-upstream-service-time:
          - "623"
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999818"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_35e2a48f90bf4c33a344d6e76d1eafd9
      status:
        code: 200
        message: OK
  - request:
      body: '{"input":["What was it that I liked?"],"model":"text-embedding-3-small","dimensions":1536,"encoding_format":"base64"}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "117"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "120"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/embeddings
    response:
      body:
        string: !!binary |
          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
          z+V/bQP917/+DwAAAP//AwAkSa3V3iAAAA==
      headers:
        CF-RAY:
          - 96db651bef89eb36-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:27 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-allow-origin:
          - "*"
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-model:
          - text-embedding-3-small
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "285"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        via:
          - envoy-router-c98c4dbb7-jls67
        x-envoy-upstream-service-time:
          - "352"
        x-ratelimit-limit-requests:
          - "200000"
        x-ratelimit-limit-tokens:
          - "200000000"
        x-ratelimit-remaining-requests:
          - "199999"
        x-ratelimit-remaining-tokens:
          - "199999993"
        x-ratelimit-reset-requests:
          - 0s
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_d449e217d7ff4ca884793874523f028b
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages":[{"role":"system","content":"Provide a summary of the relevant
        information that could help answer the question based on the excerpt. Your summary,
        combined with many others, will be given to the model to generate an answer.
        Respond with the following JSON format:\n\n{\n  \"summary\": \"...\",\n  \"relevance_score\":
        \"...\"\n  \"used_images\"\n}\n\nwhere `summary` is relevant information from
        the text - about 100 words words. `relevance_score` is an integer 1-10 for the
        relevance of `summary` to the question. `used_images` is a boolean flag indicating
        if any images present in a multimodal message were used, and if no images were
        present it should be false."},{"role":"user","content":"Excerpt from sentence1:
        stub\n\n------------\n\nI like turtles.\n\n------------\n\nQuestion: What was
        it that I liked?\n\n"}],"model":"gpt-4o-2024-11-20","n":1,"temperature":0.0}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "883"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "60.0"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAA4ySQW/bMAyF7/4Vgs5JYTtOg+U29FIM2GHAUGCbC0ORaFuNLGkiVTQL8t8H2U2c
          bh2wiw/8+J7JRx0zxrhWfMu47AXJwZvl3eoh0s+77+bzx4dPh10lK/Rffq3jt/29DHyRFG73BJLO
          qhvpBm+AtLMTlgEEQXItNuvqw3q1yTcjGJwCk2Sdp2XllmVeVsuiWJb5q7B3WgLyLfuRMcbYcfym
          Ea2CF75l+eJcGQBRdMC3lybGeHAmVbhA1EjCEl/MUDpLYMepj7VlrOYYh0GEQ823rOZfe2DwIiF4
          YkiCABn1ghj1wCJCYEbvUy0GMoA3NV9MJgEMPAsroUHpAkxmRX7hEUE1ehAdYGKtMAi1PV1PFqCN
          KFIwNhpzBYS1jkQKdszk8ZWcLikY1/ngdviHlLfaauybAAKdTRsjOc9HesoYexzTjm8C5D64wVND
          bg/j74pNOfnx+b4zXZ0hORJmrpd5tXjHr1FAQhu8uheXQvagZul8XBGVdlcgu9r672ne854217b7
          H/sZSAmeQDU+gNLy7cZzW4D0/P/Vdkl5HJgjhGctoSENIV1CQSuimV4mxwMSDE2rbQfBBz09z9Y3
          ZXELt+tKVopnp+w3AAAA//8DAMtV61unAwAA
      headers:
        CF-RAY:
          - 96db651e7e3267f8-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:27 GMT
        Server:
          - cloudflare
        Strict-Transport-Security:
          - max-age=31536000; includeSubDomains; preload
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "531"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        x-envoy-upstream-service-time:
          - "548"
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999814"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_cd0d2b26b8084a758fa38f551d1d57c9
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages":[{"role":"system","content":"Provide a summary of the relevant
        information that could help answer the question based on the excerpt. Your summary,
        combined with many others, will be given to the model to generate an answer.
        Respond with the following JSON format:\n\n{\n  \"summary\": \"...\",\n  \"relevance_score\":
        \"...\"\n  \"used_images\"\n}\n\nwhere `summary` is relevant information from
        the text - about 100 words words. `relevance_score` is an integer 1-10 for the
        relevance of `summary` to the question. `used_images` is a boolean flag indicating
        if any images present in a multimodal message were used, and if no images were
        present it should be false."},{"role":"user","content":"Excerpt from sentence2:
        stub\n\n------------\n\nI like cats.\n\n------------\n\nQuestion: What was it
        that I liked?\n\n"}],"model":"gpt-4o-2024-11-20","n":1,"temperature":0.0}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "880"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.99.5
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.99.5
        x-stainless-raw-response:
          - "true"
        x-stainless-read-timeout:
          - "60.0"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.13.5
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAA4ySQW/bMAyF7/4VhM5JYTtOg+W2dsAuxQ7DsMPmwlAk2lYrS4JIdwmC/PfBdhOn
          Wwfs4gM/vmfyUccEQBgttiBUK1l1wS7vV997rs2vsLvDj27/Rf74/HW9fni4O5juk1gMCr97QsVn
          1Y3yXbDIxrsJq4iScXDNNuviw3q1STcj6LxGO8iawMvCL/M0L5ZZtszTV2HrjUISW/iZAAAcx+8w
          otO4F1tIF+dKh0SyQbG9NAGI6O1QEZLIEEvHYjFD5R2jG6c+lg6gFNR3nYyHUmyhFN9aBNwrjIGB
          WDIScCsZuEXoCSNY84wESjLdlGIxOUS0+CKdwoqUjzg5ZemF94S6Mp1skAZWS0tYutP1WBHrnuSQ
          iuutvQLSOc9ySHUM5PGVnC4RWN+E6Hf0h1TUxhlqq4iSvBvWJfZBjPSUADyOUfdv0hMh+i5wxf4Z
          x99lm3zyE/NxZ7o6Q/Ys7VzP02Lxjl+lkaWxdHUsoaRqUc/S+bKy18ZfgeRq67+nec972ty45n/s
          Z6AUBkZdhYjaqLcbz20Rh7f/r7ZLyuPAgjC+GIUVG4zDJTTWsrfTsxR0IMauqo1rMIZoprdZhyrP
          bvF2XahCi+SU/AYAAP//AwAyreeRpAMAAA==
      headers:
        CF-RAY:
          - 96db651e6aceed3f-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Mon, 11 Aug 2025 23:08:28 GMT
        Server:
          - cloudflare
        Strict-Transport-Security:
          - max-age=31536000; includeSubDomains; preload
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        cf-cache-status:
          - DYNAMIC
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "735"
        openai-project:
          - proj_RpeV6PrPclPHBb5GlExPXSBj
        openai-version:
          - "2020-10-01"
        x-envoy-upstream-service-time:
          - "777"
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999815"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_a643a65618ef440a91e94b79eda96db6
      status:
        code: 200
        message: OK
version: 1
